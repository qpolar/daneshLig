<!DOCTYPE html>
<html lang="fa" dir="rtl">

<head>
    <meta charset="UTF-8">
    <title>
        <%= title %>
    </title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">


    <style>
        :root {
            --primary: #6c5ce7;
            --secondary: #a29bfe;
            --dark: #1e272e;
            --darker: #0f1519;
            --light: #f5f6fa;
            --gray: #808e9b;
            --success: #00b894;
            --danger: #d63031;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        body {
            background-color: var(--darker) !important;
            color: var(--light);
            line-height: 1.6;
            padding: 0;
            margin: 0;
            min-height: 100vh;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 2rem;
        }

        header {
            background: linear-gradient(135deg, var(--primary), var(--secondary));
            padding: 2rem;
            border-radius: 0 0 20px 20px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
            margin-bottom: 2rem;
            text-align: center;
            position: relative;
            overflow: hidden;
        }

        header::before {
            content: '';
            position: absolute;
            top: -50%;
            left: -50%;
            width: 200%;
            height: 200%;
            background: radial-gradient(circle, rgba(255, 255, 255, 0.1) 0%, rgba(255, 255, 255, 0) 70%);
            transform: rotate(30deg);
        }

        h1 {
            font-size: 2.5rem;
            margin-bottom: 0.5rem;
            position: relative;
            text-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
        }

        .grade-badge {
            display: inline-block;
            background-color: var(--success);
            color: white;
            padding: 0.3rem 0.8rem;
            border-radius: 20px;
            font-size: 0.9rem;
            margin-right: 0.5rem;
            vertical-align: middle;
        }

        .description {
            font-size: 1.1rem;
            opacity: 0.9;
            max-width: 800px;
            margin: 0 auto;
        }

        .section-title {
            font-size: 1.8rem;
            margin: 2rem 0 1.5rem;
            position: relative;
            display: inline-block;
        }

        .section-title::after {
            content: '';
            position: absolute;
            bottom: -10px;
            left: 0;
            width: 50px;
            height: 3px;
            background: var(--primary);
            border-radius: 3px;
        }

        .chapters-list {
            list-style: none;
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 1rem;
        }

        .chapter-item {
            background-color: rgba(255, 255, 255, 0.05);
            border-radius: 12px;
            padding: 1.5rem;
            transition: all 0.3s ease;
            border-left: 4px solid var(--primary);
            position: relative;
            overflow: hidden;
            color: white;
        }

        .chapter-item:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
            background-color: rgba(255, 255, 255, 0.08);
        }

        .chapter-item::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: linear-gradient(135deg, rgba(108, 92, 231, 0.1), rgba(162, 155, 254, 0.05));
            z-index: -1;
        }

        .chapter-number {
            color: var(--primary);
            font-weight: bold;
            margin-left: 0.5rem;
        }

        footer {
            text-align: center;
            margin-top: 3rem;
            padding: 1.5rem;
            color: var(--gray);
            font-size: 0.9rem;
        }

        @media (max-width: 768px) {
            .container {
                padding: 1rem;
            }

            header {
                padding: 1.5rem;
            }

            h1 {
                font-size: 1.8rem;
            }

            .chapters-list {
                grid-template-columns: 1fr;
            }
        }
    </style>
    <%- include('partials/head') %>
</head>

<body>
    <nav class="navbar" id="navbar" dir="ltr">

        <%- include('partials/nav') %>

    </nav>

    <div class="container">
        <header>
            <h1>
                <span class="grade-badge">پایه
                    <span id="grade">
                        <%= lesson.grade %>
                    </span>
                </span>
                <span id="subject">
                    <%= lesson.subject %>
                </span>
            </h1>
            <p class="description">
                <%= lesson.description %>
            </p>
        </header>

        <main>
            <h2 class="section-title">فصل‌های درس</h2>
            <ul class="chapters-list">
                <% lesson.titles.forEach((title, index)=> { %>
                    <li class="chapter-item">
                        <i class="fas fa-book-open chapter-number"></i>
                        <span id="title">
                            <%= title %>
                        </span>

                    </li>
                    <% }); %>
            </ul>
        </main>

        <footer>
            <p>ساخته شده با ❤️ برای آینده‌سازان ایران</p>
        </footer>
    </div>

    <script>
        document.querySelectorAll('.chapter-item').forEach(item => {
    item.addEventListener('click', async (e) => {
        e.preventDefault();
        
        const grade = document.getElementById('grade').innerText.trim();
        const subject = document.getElementById('subject').innerText.trim();
        const title = item.querySelector('span').innerText.trim();

        try {
            const response = await fetch('/api/lessons', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    grade: grade,
                    subject: subject,
                    title: title
                })
            });

            const data = await response.json();

            if (data.success && data.redirectUrl) {
                // روش ۱: هدایت به صفحه جدید با پارامترهای URL
                window.location.href = data.redirectUrl;
                
            } else {
                alert(data.message || "درس مورد نظر یافت نشد");
            }
        } catch (error) {
            console.error('Error:', error);
            alert('مشکلی در ارتباط با سرور پیش آمد!');
        }
    });
});
    </script>
</body>

</html>