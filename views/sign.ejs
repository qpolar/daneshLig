<!DOCTYPE html>
<html lang="fa" dir="rtl">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>فرم ثبت نام</title>
    <link href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css" rel="stylesheet">
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background-color: #f5f5f5;
            margin: 0;
            padding: 20px;
            color: #333;
        }
        
        .container {
            max-width: 500px;
            margin: 0 auto;
            background-color: #fff;
            padding: 30px;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        }
        
        h1 {
            text-align: center;
            color: #2c3e50;
            margin-bottom: 30px;
        }
        
        .form-group {
            margin-bottom: 20px;
        }
        
        label {
            display: block;
            margin-bottom: 8px;
            font-weight: 600;
        }
        
        input {
            width: 100%;
            padding: 10px 15px;
            border: 1px solid #ddd;
            border-radius: 4px;
            font-size: 16px;
            box-sizing: border-box;
        }
        
        input:focus {
            outline: none;
            border-color: #3498db;
            box-shadow: 0 0 0 2px rgba(52, 152, 219, 0.2);
        }
        
        .error-message {
            color: #e74c3c;
            font-size: 14px;
            margin-top: 5px;
            height: 20px;
        }
        
        .error-message.checking {
            color: #f39c12;
        }
        
        .error-message.available {
            color: #27ae60;
        }
        
        button {
            background-color: #3498db;
            color: white;
            border: none;
            padding: 12px 20px;
            font-size: 16px;
            border-radius: 4px;
            cursor: pointer;
            width: 100%;
            transition: background-color 0.3s;
        }
        
        button:hover {
            background-color: #2980b9;
        }
        
        .form-footer {
            text-align: center;
            margin-top: 20px;
            font-size: 14px;
        }
        
        a {
            color: #3498db;
            text-decoration: none;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>ثبت نام</h1>
        <form id="registrationForm">
            <div class="form-group">
                <label for="username">نام کاربری</label>
                <input type="text" id="username" name="username" autocomplete="username">
                <div id="usernameError" class="error-message"></div>
            </div>
            
            <div class="form-group">
                <label for="password">رمز عبور</label>
                <input type="password" id="password" name="password" autocomplete="new-password">
                <div id="passwordError" class="error-message"></div>
            </div>
            
            <div class="form-group">
                <label for="firstName">نام</label>
                <input type="text" id="firstName" name="firstName" autocomplete="given-name">
                <div id="firstNameError" class="error-message"></div>
            </div>
            
            <div class="form-group">
                <label for="lastName">نام خانوادگی</label>
                <input type="text" id="lastName" name="lastName" autocomplete="family-name">
                <div id="lastNameError" class="error-message"></div>
            </div>
            
            <button type="submit" id="submit">ثبت نام</button>
        </form>
        
        <div class="form-footer">
            قبلاً حساب کاربری دارید؟ <a href="/login">ورود</a>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // تعریف تمام فیلدهای ورودی و توابع اعتبارسنجی آنها
            const input = document.querySelectorAll('input');
            const inputs = {
                username: {
                    element: document.getElementById('username'),
                    error: document.getElementById('usernameError'),
                    validate: function (value) {
                        if (value === '') return 'این فیلد نمی‌تواند خالی باشد';
                        if (value.length < 3) return 'نام کاربری باید حداقل 3 کاراکتر داشته باشد';
                        if (!/^[a-zA-Z0-9_]+$/.test(value)) return 'فقط حروف، اعداد و _ مجاز هستند';
                        return null;
                    }
                },
                password: {
                    element: document.getElementById('password'),
                    error: document.getElementById('passwordError'),
                    validate: function (value) {
                        if (value === '') return 'این فیلد نمی‌تواند خالی باشد';
                        if (value.length < 6) return 'رمز عبور باید حداقل 6 کاراکتر داشته باشد';
                        return null;
                    }
                },
                firstName: {
                    element: document.getElementById('firstName'),
                    error: document.getElementById('firstNameError'),
                    validate: function (value) {
                        return null; // موقتاً غیرفعال
                    }
                },
                lastName: {
                    element: document.getElementById('lastName'),
                    error: document.getElementById('lastNameError'),
                    validate: function (value) {
                        return null; // موقتاً غیرفعال
                    }
                }
            };

            // متغیر برای تایمر تاخیر بررسی نام کاربری
            let debounceTimer;

            // تنظیم رویداد blur برای تمام فیلدها
            Object.values(inputs).forEach(input => {
                input.element.addEventListener('blur', function () {
                    const value = this.value.trim();
                    const errorMessage = input.validate(value);
                    input.error.textContent = errorMessage || '';
                });
            });

            // رویداد خاص برای بررسی نام کاربری
            inputs.username.element.addEventListener('input', function (e) {
                const username = e.target.value.trim();
                clearTimeout(debounceTimer);

                // اگر خالی است پیام قبلی را پاک کن
                if (username === '') {
                    inputs.username.error.textContent = '';
                    return;
                }

                // اعتبارسنجی اولیه
                if (username.length < 3) {
                    inputs.username.error.textContent = 'نام کاربری باید حداقل 3 کاراکتر داشته باشد';
                    return;
                }

                if (!/^[a-zA-Z0-9_]+$/.test(username)) {
                    inputs.username.error.textContent = 'فقط حروف، اعداد و _ مجاز هستند';
                    return;
                }

                // تاخیر برای بررسی سرور
                debounceTimer = setTimeout(() => {
                    checkUsernameAvailability(username);
                }, 500);
            });

            // اضافه کردن رویداد focus برای فیلد نام کاربری
            const fields = [
                { element: document.getElementById('username'), error: document.getElementById('usernameError') },
                { element: document.getElementById('password'), error: document.getElementById('passwordError') },
                { element: document.getElementById('firstName'), error: document.getElementById('firstNameError') },
                { element: document.getElementById('lastName'), error: document.getElementById('lastNameError') }
            ];

            // اضافه کردن رویداد focus برای تمام فیلدها
            fields.forEach(field => {
                field.element.addEventListener('focus', function () {
                    // پاک کردن پیام خطا هنگام فوکوس
                    field.error.textContent = '';
                    field.error.className = 'error-message';
                });
            });

            // تابع بررسی نام کاربری در سرور
            async function checkUsernameAvailability(username) {
                try {
                    inputs.username.error.textContent = 'در حال بررسی...';
                    inputs.username.error.className = 'error-message checking';

                    const response = await fetch(`/api/check-username?username=${encodeURIComponent(username)}`);
                    const data = await response.json();

                    if (data.status === 'success') {
                        if (data.available) {
                            inputs.username.error.textContent = 'نام کاربری آزاد است';
                            inputs.username.error.className = 'error-message available';
                        } else {
                            inputs.username.error.textContent = 'این نام کاربری قبلاً ثبت شده است';
                            inputs.username.error.className = 'error-message';
                        }
                    } else {
                        inputs.username.error.textContent = data.message || 'خطا در بررسی نام کاربری';
                        inputs.username.error.className = 'error-message';
                    }
                } catch (error) {
                    console.error('Error checking username:', error);
                    inputs.username.error.textContent = 'خطا در اتصال به سرور';
                    inputs.username.error.className = 'error-message';
                }
            }

            // رویداد ارسال فرم
            document.getElementById('submit').addEventListener('click', async function (e) {
                e.preventDefault();
                let isValid = true;

                // اعتبارسنجی تمام فیلدها
                Object.values(inputs).forEach(input => {
                    const value = input.element.value.trim();
                    const errorMessage = input.validate(value);

                    if (errorMessage) {
                        input.error.textContent = errorMessage;
                        isValid = false;
                    }
                });

                // اعتبارسنجی اضافی برای نام کاربری
                const username = inputs.username.element.value.trim();
                if (isValid && username.length < 3) {
                    inputs.username.error.textContent = 'نام کاربری باید حداقل 3 کاراکتر داشته باشد';
                    isValid = false;
                }

                if (isValid && !/^[a-zA-Z0-9_]+$/.test(username)) {
                    inputs.username.error.textContent = 'فقط حروف، اعداد و _ مجاز هستند';
                    isValid = false;
                }

                if (!isValid) return;

                // ارسال فرم
                try {
                    const response = await fetch('/api/users', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({
                            username: username,
                            password: inputs.password.element.value,
                            firstName: inputs.firstName.element.value.trim(),
                            lastName: inputs.lastName.element.value.trim()
                        })
                    });

                    const data = await response.json();

                    if (data.status === 'success') {
                        Swal.fire({
                            title: 'ثبت نام موفق!',
                            text: 'ثبت نام شما با موفقیت انجام شد',
                            icon: 'success',
                            confirmButtonText: 'متوجه شدم',
                            allowOutsideClick: false
                        }).then((result) => {
                            if (result.isConfirmed) {
                                // اول ریست فرم انجام شود
                                document.getElementById('registrationForm').reset();
                                
                                // سپس انتقال به صفحه اصلی
                                window.location.href = '/';
                            }
                        });
                    } else {
                        Swal.fire({
                            title: 'خطا!',
                            text: data.message || 'خطا در ثبت نام',
                            icon: 'error',
                            confirmButtonText: 'متوجه شدم'
                        });

                        if (data.field === 'username') {
                            inputs.username.error.textContent = data.message;
                        }
                    }
                } catch (error) {
                    console.error('Registration error:', error);
                    Swal.fire({
                        title: 'خطا!',
                        text: 'خطا در ارتباط با سرور',
                        icon: 'error',
                        confirmButtonText: 'متوجه شدم'
                    });
                }
            });
        });

        // برداشتن تمام محدودیت‌های CSS روی فیلدها
        document.getElementById('firstName').style.pointerEvents = 'auto';
        document.getElementById('firstName').style.opacity = '1';
        document.getElementById('firstName').style.userSelect = 'text';
        document.getElementById('lastName').style.pointerEvents = 'auto';
        document.getElementById('lastName').style.opacity = '1';
        document.getElementById('lastName').style.userSelect = 'text';

        // بررسی وضعیت فیلدها
        console.log('firstName:', {
            disabled: document.getElementById('firstName').disabled,
            readonly: document.getElementById('firstName').readOnly,
            style: window.getComputedStyle(document.getElementById('firstName'))
        });
    </script>
</body>
</html>